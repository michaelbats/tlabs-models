/// <reference types="mongoose" />
import { ExtractProps } from 'ts-mongoose';
declare const ClientSchema: import("mongoose").Schema<any> & {
    definition: import("ts-mongoose").ConvertObject<{
        _id: string;
        TLAccount: string | null | undefined;
        TLAdmin: string | null | undefined;
        TLTechnical: string | null | undefined;
        accountLimit: number | null | undefined;
        accountStatus: string | null | undefined;
        accountType: string | null | undefined;
        address1: string | null | undefined;
        agreedScheduleRates: boolean | null | undefined;
        autoGeneratedReportName: boolean | null | undefined;
        autoGenerateUprn: boolean | null | undefined;
        city: string | null | undefined;
        county: string | null | undefined;
        createdAt: string | null | undefined;
        files: import("ts-mongoose").ConvertObject<{
            fileId: string;
            fileName: string;
            fileUrl: string;
            hideFromEngineer: boolean;
        }>[] | null | undefined;
        googleFolder: import("ts-mongoose").ConvertObject<import("ts-mongoose").ConvertObject<{
            id: string;
            name: string;
            url: string;
        }>> | null | undefined;
        hasOwnScheduleOfRates: boolean | null | undefined;
        isContractor: boolean | null | undefined;
        name: string | null | undefined;
        notes: string | null | undefined;
        ownerId: string | null | undefined;
        postcode: string | null | undefined;
        reportEmail: import("ts-mongoose").ConvertObject<{
            body: string;
            subject: string;
            subjectUrgent: string;
        }> | null | undefined;
        sageReference: string | null | undefined;
        scheduleOfRates: import("ts-mongoose").ConvertObject<{
            _id: string;
            title: string;
            normalHourse: number | null | undefined;
            weekend: number | null | undefined;
            duration: number | null | undefined;
            internalProcedure: string | null | undefined;
            description: string | null | undefined;
            reqSkills: string[] | null | undefined;
            teamsAppointmentType: string | null | undefined;
            teamsSurveyType: string | null | undefined;
            teamsPropertyType: string | null | undefined;
            teamsDistanceBand: string | null | undefined;
            numberOfPumps: number | null | undefined;
            teamsAirTestType: string | null | undefined;
            elements: string[] | null | undefined;
            reference: number | null | undefined;
        }>[] | null | undefined;
        sector: string | null | undefined;
        sites: import("ts-mongoose").ConvertObject<{
            _id: string | null | undefined;
            clientId: string | null | undefined;
            autoGenerated: boolean | null | undefined;
            title: string | null | undefined;
            UPRN: string;
            UPRNLabel: string;
            postcode: string;
            addressLine1: string;
            city: string;
            county: string;
            mandatoryInduction: boolean;
            createdAt: Date | null | undefined;
            teamsId: string | null | undefined;
        }>[] | null | undefined;
        tags: string[] | null | undefined;
        teamsId: string | null | undefined;
        telephone: string | null | undefined;
    }>;
    options: import("mongoose").SchemaOptions;
};
export declare const Client: import("mongoose").Model<import("mongoose").Document & {
    _id: string;
} & {
    sites?: import("ts-mongoose").ConvertObject<{
        _id: string | null | undefined;
        clientId: string | null | undefined;
        autoGenerated: boolean | null | undefined;
        title: string | null | undefined;
        UPRN: string;
        UPRNLabel: string;
        postcode: string;
        addressLine1: string;
        city: string;
        county: string;
        mandatoryInduction: boolean;
        createdAt: Date | null | undefined;
        teamsId: string | null | undefined;
    }>[] | null | undefined;
    postcode?: string | null | undefined;
    city?: string | null | undefined;
    county?: string | null | undefined;
    createdAt?: string | null | undefined;
    teamsId?: string | null | undefined;
    name?: string | null | undefined;
    notes?: string | null | undefined;
    TLAccount?: string | null | undefined;
    TLAdmin?: string | null | undefined;
    TLTechnical?: string | null | undefined;
    accountLimit?: number | null | undefined;
    accountStatus?: string | null | undefined;
    accountType?: string | null | undefined;
    address1?: string | null | undefined;
    agreedScheduleRates?: boolean | null | undefined;
    autoGeneratedReportName?: boolean | null | undefined;
    autoGenerateUprn?: boolean | null | undefined;
    files?: import("ts-mongoose").ConvertObject<{
        fileId: string;
        fileName: string;
        fileUrl: string;
        hideFromEngineer: boolean;
    }>[] | null | undefined;
    googleFolder?: import("ts-mongoose").ConvertObject<import("ts-mongoose").ConvertObject<{
        id: string;
        name: string;
        url: string;
    }>> | null | undefined;
    hasOwnScheduleOfRates?: boolean | null | undefined;
    isContractor?: boolean | null | undefined;
    ownerId?: string | null | undefined;
    reportEmail?: import("ts-mongoose").ConvertObject<{
        body: string;
        subject: string;
        subjectUrgent: string;
    }> | null | undefined;
    sageReference?: string | null | undefined;
    scheduleOfRates?: import("ts-mongoose").ConvertObject<{
        _id: string;
        title: string;
        normalHourse: number | null | undefined;
        weekend: number | null | undefined;
        duration: number | null | undefined;
        internalProcedure: string | null | undefined;
        description: string | null | undefined;
        reqSkills: string[] | null | undefined;
        teamsAppointmentType: string | null | undefined;
        teamsSurveyType: string | null | undefined;
        teamsPropertyType: string | null | undefined;
        teamsDistanceBand: string | null | undefined;
        numberOfPumps: number | null | undefined;
        teamsAirTestType: string | null | undefined;
        elements: string[] | null | undefined;
        reference: number | null | undefined;
    }>[] | null | undefined;
    sector?: string | null | undefined;
    tags?: string[] | null | undefined;
    telephone?: string | null | undefined;
}, {}>;
export declare type IClient = ExtractProps<typeof ClientSchema>;
export {};
