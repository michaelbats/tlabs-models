/// <reference types="mongoose" />
import { ExtractProps } from 'ts-mongoose';
declare const ProjectSchema: import("mongoose").Schema<any> & {
    definition: import("ts-mongoose").ConvertObject<{
        _id: string;
        teamsId: string | null | undefined;
        scopeOfWorks: string | null | undefined;
        engineerNote: string | null | undefined;
        reference: number | null | undefined;
        sourceQuoteId: string | null | undefined;
        clientId: string;
        clientName: string;
        quoteRequestedBy: string | null | undefined;
        quotePreparedBy: string | null | undefined;
        isActive: boolean;
        isCompleted: boolean;
        activationDate: Date | null | undefined;
        endDate: Date | null | undefined;
        latestJobsOutputReport: import("ts-mongoose").ConvertObject<{
            fileId: string;
            fileName: string;
            fileUrl: string;
            hideFromEngineer: boolean;
        }> | null | undefined;
        documents: string[] | null | undefined;
        purchaseOrder: string | null | undefined;
        callScript: string | null | undefined;
        allowedWorkTypes: string[] | null | undefined;
        sites: import("ts-mongoose").ConvertObject<{
            _id: string | null | undefined;
            clientId: string | null | undefined;
            autoGenerated: boolean | null | undefined;
            title: string | null | undefined;
            UPRN: string;
            UPRNLabel: string;
            postcode: string;
            addressLine1: string;
            city: string;
            county: string;
            mandatoryInduction: boolean;
            createdAt: Date | null | undefined;
            teamsId: string | null | undefined;
        }>[] | null | undefined;
        team: import("ts-mongoose").ConvertObject<{
            admin: string[] | null | undefined;
            engineers: string[] | null | undefined;
            others: string[] | null | undefined;
        }> | null | undefined;
        removalContractorContactId: string | null | undefined;
        contacts: import("ts-mongoose").ConvertObject<{
            contactId: string | null | undefined;
            notes: string | null | undefined;
            noAccess: string | null | undefined;
            reports: string | null | undefined;
            jobStatus: string | null | undefined;
        }>[] | null | undefined;
        workflow: import("ts-mongoose").ConvertObject<{
            presite: import("ts-mongoose").ConvertObject<{
                numberOfDays: number | null | undefined;
                steps: undefined[] | null[] | import("ts-mongoose").ConvertObject<{
                    type: import("ts-mongoose").ConvertObject<{
                        action: string | null | undefined;
                        percentage: number | null | undefined;
                        delay: number | null | undefined;
                        associatedRole: string | null | undefined;
                    }> | null | undefined;
                    label: string | null | undefined;
                }>[] | null | undefined;
            }> | null | undefined;
            site: import("ts-mongoose").ConvertObject<{
                numberOfDays: number | null | undefined;
                steps: undefined[] | null[] | import("ts-mongoose").ConvertObject<{
                    type: import("ts-mongoose").ConvertObject<{
                        action: string | null | undefined;
                        percentage: number | null | undefined;
                        delay: number | null | undefined;
                        associatedRole: string | null | undefined;
                    }> | null | undefined;
                    label: string | null | undefined;
                }>[] | null | undefined;
            }> | null | undefined;
            postsite: import("ts-mongoose").ConvertObject<{
                numberOfDays: number | null | undefined;
                steps: undefined[] | null[] | import("ts-mongoose").ConvertObject<{
                    type: import("ts-mongoose").ConvertObject<{
                        action: string | null | undefined;
                        percentage: number | null | undefined;
                        delay: number | null | undefined;
                        associatedRole: string | null | undefined;
                    }> | null | undefined;
                    label: string | null | undefined;
                }>[] | null | undefined;
            }> | null | undefined;
        }> | null | undefined;
        compliance: import("ts-mongoose").ConvertObject<{
            hasMethodStatement: boolean | null | undefined;
            hasScheduleOfRates: boolean | null | undefined;
            automaticAnalysisReport: "manual" | "automatic";
            raiseInvoice: "manual" | "automatic" | "bulk";
        }> | null | undefined;
        riskAssessments: string[] | null | undefined;
        requirements: import("ts-mongoose").ConvertObject<{
            reqId: string;
            quantity: number;
            clientCost: number;
            externalCost: number;
        }>[] | null | undefined;
        googleFolder: import("ts-mongoose").ConvertObject<{
            id: string;
            name: string;
            url: string;
        }> | null | undefined;
        files: import("ts-mongoose").ConvertObject<{
            fileId: string;
            fileName: string;
            fileUrl: string;
            hideFromEngineer: boolean;
        }>[] | null | undefined;
        sendReports: boolean | null | undefined;
        tags: string[] | null | undefined;
        createdBy: string;
        createdAt: Date;
    }>;
    options: import("mongoose").SchemaOptions;
};
export declare const Project: import("mongoose").Model<import("mongoose").Document & {
    _id: string;
    clientId: string;
    createdAt: Date;
    clientName: string;
    createdBy: string;
    isActive: boolean;
    isCompleted: boolean;
} & {
    sites?: import("ts-mongoose").ConvertObject<{
        _id: string | null | undefined;
        clientId: string | null | undefined;
        autoGenerated: boolean | null | undefined;
        title: string | null | undefined;
        UPRN: string;
        UPRNLabel: string;
        postcode: string;
        addressLine1: string;
        city: string;
        county: string;
        mandatoryInduction: boolean;
        createdAt: Date | null | undefined;
        teamsId: string | null | undefined;
    }>[] | null | undefined;
    reference?: number | null | undefined;
    teamsId?: string | null | undefined;
    contacts?: import("ts-mongoose").ConvertObject<{
        contactId: string | null | undefined;
        notes: string | null | undefined;
        noAccess: string | null | undefined;
        reports: string | null | undefined;
        jobStatus: string | null | undefined;
    }>[] | null | undefined;
    requirements?: import("ts-mongoose").ConvertObject<{
        reqId: string;
        quantity: number;
        clientCost: number;
        externalCost: number;
    }>[] | null | undefined;
    riskAssessments?: string[] | null | undefined;
    files?: import("ts-mongoose").ConvertObject<{
        fileId: string;
        fileName: string;
        fileUrl: string;
        hideFromEngineer: boolean;
    }>[] | null | undefined;
    googleFolder?: import("ts-mongoose").ConvertObject<{
        id: string;
        name: string;
        url: string;
    }> | null | undefined;
    tags?: string[] | null | undefined;
    endDate?: Date | null | undefined;
    engineerNote?: string | null | undefined;
    purchaseOrder?: string | null | undefined;
    workflow?: import("ts-mongoose").ConvertObject<{
        presite: import("ts-mongoose").ConvertObject<{
            numberOfDays: number | null | undefined;
            steps: undefined[] | null[] | import("ts-mongoose").ConvertObject<{
                type: import("ts-mongoose").ConvertObject<{
                    action: string | null | undefined;
                    percentage: number | null | undefined;
                    delay: number | null | undefined;
                    associatedRole: string | null | undefined;
                }> | null | undefined;
                label: string | null | undefined;
            }>[] | null | undefined;
        }> | null | undefined;
        site: import("ts-mongoose").ConvertObject<{
            numberOfDays: number | null | undefined;
            steps: undefined[] | null[] | import("ts-mongoose").ConvertObject<{
                type: import("ts-mongoose").ConvertObject<{
                    action: string | null | undefined;
                    percentage: number | null | undefined;
                    delay: number | null | undefined;
                    associatedRole: string | null | undefined;
                }> | null | undefined;
                label: string | null | undefined;
            }>[] | null | undefined;
        }> | null | undefined;
        postsite: import("ts-mongoose").ConvertObject<{
            numberOfDays: number | null | undefined;
            steps: undefined[] | null[] | import("ts-mongoose").ConvertObject<{
                type: import("ts-mongoose").ConvertObject<{
                    action: string | null | undefined;
                    percentage: number | null | undefined;
                    delay: number | null | undefined;
                    associatedRole: string | null | undefined;
                }> | null | undefined;
                label: string | null | undefined;
            }>[] | null | undefined;
        }> | null | undefined;
    }> | null | undefined;
    callScript?: string | null | undefined;
    latestJobsOutputReport?: import("ts-mongoose").ConvertObject<{
        fileId: string;
        fileName: string;
        fileUrl: string;
        hideFromEngineer: boolean;
    }> | null | undefined;
    scopeOfWorks?: string | null | undefined;
    sourceQuoteId?: string | null | undefined;
    quoteRequestedBy?: string | null | undefined;
    quotePreparedBy?: string | null | undefined;
    activationDate?: Date | null | undefined;
    documents?: string[] | null | undefined;
    allowedWorkTypes?: string[] | null | undefined;
    team?: import("ts-mongoose").ConvertObject<{
        admin: string[] | null | undefined;
        engineers: string[] | null | undefined;
        others: string[] | null | undefined;
    }> | null | undefined;
    removalContractorContactId?: string | null | undefined;
    compliance?: import("ts-mongoose").ConvertObject<{
        hasMethodStatement: boolean | null | undefined;
        hasScheduleOfRates: boolean | null | undefined;
        automaticAnalysisReport: "manual" | "automatic";
        raiseInvoice: "manual" | "automatic" | "bulk";
    }> | null | undefined;
    sendReports?: boolean | null | undefined;
}, {}>;
export declare type IProject = ExtractProps<typeof ProjectSchema>;
export {};
