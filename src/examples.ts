import { ISite } from './models/site.models';
import {
	Requirements,
	WorkflowSteps,
	Steps,
	StepsType,
	Workflow,
	Element,
	GoogleFolder,
	GoogleFile,
	ProjectContacts,
	ProjectCompliance,
	Samples,
	Team,
	ScheduleOfRates
} from './models/shared.models';
import { JobContact, Failure, WorkType, Work, IJob } from './models/job.models';
import {
	IUser,
	Engineer,
	WorkingHours,
	WorkingDay,
	GlobalCalendar,
	Settings
} from './models/user.models';

import { NextTask, ITask } from './models/task.models';
import { IActivity } from './models/activity.model';
import {
	AutomaticAnalysisReport,
	RaiseInvoice,
	QAActions,
	QAIssueType,
	Reason,
	Likelihood,
	Status,
	RelatedCollection,
	ActivityType
} from './enums';
import { IBooking } from './models/booking.models';
import { IBatch } from './models/batch.model';
import { IProject } from './models/project.models';
import { ILocation, IProperties, IGeometry, IGeoJson } from './models/location.models';

export const SiteDocExample: ISite = {
	_id: 'string',
	clientId: 'string',
	autoGenerated: false,
	title: 'string',
	UPRN: 'string',
	UPRNLabel: 'string',
	postcode: 'string',
	addressLine1: 'string',
	city: 'string',
	county: 'string',
	mandatoryInduction: false,
	createdAt: new Date(Date.now()).toISOString(),
	teamsId: 'string'
};
export const StepsTypeExample: StepsType = {
	action: 'string',
	percentage: 12345,
	delay: 12345,
	associatedRole: 'string'
};

export const StepsExample: Steps = {
	type: StepsTypeExample,
	label: 'string'
};

export const RequirementsExample: Requirements = {
	reqId: 'string',
	quantity: 12345,
	clientCost: 12345,
	externalCost: 12345
};

export const WorkflowStepsExample: WorkflowSteps = {
	numberOfDays: 12345,
	steps: [StepsExample, StepsExample, StepsExample]
};

export const WorkflowExample: Workflow = {
	presite: [WorkflowStepsExample, WorkflowStepsExample],
	site: [WorkflowStepsExample, WorkflowStepsExample],
	postsite: [WorkflowStepsExample, WorkflowStepsExample]
};

export const ElementExample: Element = {
	_id: 'string',
	name: 'string',
	description: 'string',
	duration: 12345,
	price: 12345,
	priceWeekend: 12345,
	reference: 12345
};

export const GoogleFolderExample: GoogleFolder = {
	id: 'string',
	name: 'string',
	url: 'string'
};

export const GoogleFileExample: GoogleFile = {
	fileId: 'string',
	fileName: 'string',
	fileUrl: 'string',
	hideFromEngineer: false
};

export const ProjectContactsExample: ProjectContacts = {
	contactId: 'string',
	notes: 'string',
	noAccess: 'string',
	reports: 'string',
	jobStatus: 'string'
};

export const ProjectComplianceExample: ProjectCompliance = {
	hasMethodStatement: false,
	hasScheduleOfRates: false,
	automaticAnalysisReport: AutomaticAnalysisReport.Automatic,
	raiseInvoice: RaiseInvoice.Automatic
};

export const SamplesExample: Samples = {
	quantity: 12345,
	trackingCode: 'string',
	isUrgent: false,
	isUrgentContact: 'string',
	isUrgentReason: 'string',
	analysisStartTime: new Date(Date.now()).toISOString(),
	analysisEndTime: new Date(Date.now()).toISOString(),
	qaStartTime: new Date(Date.now()).toISOString(),
	qaEndTime: new Date(Date.now()).toISOString(),
	qaAction: QAActions.ActionRequired,
	qaIssues: false,
	qaIssueType: QAIssueType.AdminIssues,
	teamsReport: 'string'
};

export const TeamExample: Team = {
	admin: ['string1', 'string2', 'string3'],
	engineers: ['string1', 'string2', 'string3'],
	others: ['string1', 'string2', 'string3']
};

export const ScheduleOfRatesExample: ScheduleOfRates = {
	_id: 'string',
	title: 'string',
	normalHours: 12345,
	weekend: 12345,
	duration: 12345,
	internalProcedure: 'string',
	description: 'string',
	reqSkills: ['string1', 'string2', 'string3'],
	teamsAppointmentType: 'string',
	teamsPropertyType: 'string',
	teamsDistanceBand: 'string',
	numberOfPumps: 12345,
	teamsAirTestType: 'string',
	elements: ['string1', 'string2', 'string3'],
	reference: 12345
};

export const JobContactExample: JobContact = {
	name: 'string',
	phone: 'string',
	mobile: 'string',
	alternative: 'string',
	email: 'string'
};

export const FailureExample: Failure = {
	reason: Reason.NoAnswer,
	notes: 'string'
};

export const WorkTypeExample: WorkType = {
	TLtype: 'string',
	quoteRate: 12345,
	quantity: 12345,
	requirements: [],
	elements: ['element1ID', 'element2ID', 'element3ID']
};

export const WorkExample: Work = {
	likelihood: Likelihood.CertainGuaranteed,
	nextAvailableSlot: false,
	start: 'string',
	end: 'string',
	assignedOperatives: 12345,
	preferredStaff: ['string1', 'string2', 'string3'],
	staffArray: [{ key1: 'test1', key2: 'test1' }, { key1: 'test2', key2: 'test2' }],
	tlProjectManager: 'string',
	tlAdminContact: 'string',
	clientProjectManager: 'string',
	clientSiteContact: 'string',
	projectManagerTel: 'string',
	siteContactTel: 'string',
	notes: 'string',
	workType: WorkTypeExample,
	completed: false
};

export const JobDocExample: IJob = {
	_id: 'string',
	title: 'string',
	reference: 12345,
	batchId: 'string',
	batchName: 'string',
	projectId: 'string',
	projectName: 'string',
	clientId: 'string',
	clientName: 'string',
	status: Status.Booked,
	isOnHold: false,
	onHoldReason: 'string',
	onHoldDetails: 'string',
	onHoldDate: new Date(Date.now()).toISOString(),
	lowerLimit: new Date(Date.now()).toISOString(),
	higherLimit: new Date(Date.now()).toISOString(),
	deletionRequestedBy: 'user ID',
	site: SiteDocExample,
	contact: JobContactExample,
	notes: 'string',
	engineerNote: 'string',
	purchaseOrder: 'string',
	twoMen: false,
	sendReport: true,
	work: WorkExample,
	requirements: [RequirementsExample, RequirementsExample],
	failure: FailureExample,
	workflow: WorkflowExample,
	samples: SamplesExample,
	files: [GoogleFileExample, GoogleFileExample],
	reportFileIds: ['string1', 'string2', 'string3'],
	reportDraftGenerated: false,
	riskAssessments: ['string1', 'string2', 'string3'],
	tags: ['string1', 'string2', 'string3'],
	createdBy: 'string',
	createdAt: new Date(Date.now()).toISOString()
};

export const WorkingDayExample: WorkingDay = {
	start: 'string',
	end: 'string'
};

export const WorkingHoursExample: WorkingHours = {
	monday: WorkingDayExample,
	tuesday: WorkingDayExample,
	wednesday: WorkingDayExample,
	thursday: WorkingDayExample,
	friday: WorkingDayExample,
	saturday: WorkingDayExample,
	sunday: WorkingDayExample
};

export const EngineerExample: Engineer = {
	homePostcode: 'string',
	ratePerHour: 12345,
	workingHours: WorkingHoursExample,
	safetyEquipment: ['string1', 'string2', 'string3'],
	skills: ['string1', 'string2', 'string3'],
	inductedSites: ['string1', 'string2', 'string3']
};

export const GlobalCalendarExample: GlobalCalendar = {
	maxTime: 'string',
	minTime: 'string'
};
export const SettingsExample: Settings = {
	globalCalendar: GlobalCalendarExample
};

export const UserDocExample: IUser = {
	_id: 'string',
	firstname: 'string',
	lastname: 'string',
	email: 'string',
	pinColour: 'string',
	jobTitle: 'string',
	teamsId: 'string',
	createdAt: new Date(Date.now()).toISOString(),
	tags: ['string1', 'string2', 'string3'],
	settings: SettingsExample,
	engineerAttributes: EngineerExample,
	permissions: { key1: 'string', key2: 'string' },
	disabled: false,
	roles: { key1: 'string', key2: 'string' },
	workMobile: 12345,
	usersSignature: GoogleFileExample
};

export const NextTaskExample: NextTask = {
	_id: 'string',
	title: 'string',
	details: 'string',
	dueDate: new Date(Date.now()).toISOString(),
	higherLimit: new Date(Date.now()).toISOString(),
	lowerLimit: new Date(Date.now()).toISOString(),
	assigneeIds: ['string1', 'string2', 'string3'],
	nextTask: undefined
};

export const TaskDocExample: ITask = {
	_id: 'string',
	title: 'string',
	complete: false,
	completedAt: new Date(Date.now()),
	assigneeIds: ['string1', 'string2', 'string3'],
	details: 'string',
	dueDate: new Date(Date.now()),
	lowerLimit: new Date(Date.now()),
	higherLimit: new Date(Date.now()),
	raisedBy: 'string',
	relatedCollection: RelatedCollection.Clients,
	relatedId: 'string',
	relatedStage: 'string',
	relatedStep: 12345,
	relatedStepAction: 'string',
	nextTask: NextTaskExample,
	dismissedAlert: false,
	tags: ['string1', 'string2', 'string3'],
	createdAt: new Date(Date.now())
};

export const ActivityDocExample: IActivity = {
	_id: 'string',
	title: 'string',
	details: 'string',
	type: ActivityType.Call,
	createdBy: 'string',
	createdAt: new Date(Date.now()).toISOString(),
	relatedId: 'string',
	relatedCollection: RelatedCollection.Clients
};

export const BookingDocExample: IBooking = {
	_id: 'string',
	jobId: 'string',
	jobName: 'string',
	batchId: 'string',
	batchName: 'string',
	projectId: 'string',
	projectName: 'string',
	clientId: 'string',
	clientName: 'string',
	teamsId: 'string',
	engineerId: 'string',
	notes: 'string',
	status: 'string',
	imageId: 'string',
	confirmationCode: 'string',
	confirmationCodeReason: 'string',
	feedback: 'string',
	isAVO: false,
	startDate: new Date(Date.now()).toISOString(),
	endDate: new Date(Date.now()).toISOString(),
	isNotModifiable: false,
	isLockedToEngineer: false,
	actualStart: new Date(Date.now()).toISOString(),
	actualEnd: new Date(Date.now()).toISOString(),
	statusDate: new Date(Date.now()),
	ended: false,
	workCompleted: false,
	createdBy: 'string',
	createdAt: new Date(Date.now()).toISOString(),
	elementCompleted: ['string1', 'string2', 'string3']
};

export const BatchDocExample: IBatch = {
	_id: 'string',
	reference: 12345,
	projectId: 'string',
	projectName: 'string',
	clientId: 'string',
	clientName: 'string',
	isCompleted: false,
	activationDate: new Date(Date.now()).toISOString(),
	completionDate: new Date(Date.now()).toISOString(),
	note: 'string',
	createdAt: new Date(Date.now()).toISOString()
};

export const ProjectDocExample: IProject = {
	_id: 'string',
	title: 'string',
	clientId: 'string',
	clientName: 'string',
	createdBy: 'string',
	teamsId: 'string',
	scopeOfWorks: 'string',
	engineerNote: 'string',
	sourceQuoteId: 'string',
	quoteRequestedBy: 'string',
	quotePreparedBy: 'string',
	removalContractorContactId: 'string',
	purchaseOrder: 'string',
	callScript: 'string',
	reference: 12345,
	isActive: false,
	isCompleted: false,
	activationDate: new Date(Date.now()).toISOString(),
	endDate: new Date(Date.now()).toISOString(),
	createdAt: new Date(Date.now()).toISOString(),
	latestJobsOutputReport: GoogleFileExample,
	tags: ['string1', 'string2', 'string3'],
	sendReports: false,
	files: [GoogleFileExample, GoogleFileExample],
	googleFolder: GoogleFolderExample,
	requirements: [RequirementsExample, RequirementsExample],
	riskAssessments: ['string1', 'string2', 'string3'],
	workflow: WorkflowExample,
	sites: [SiteDocExample, SiteDocExample],
	allowedWorkTypes: ['string1', 'string2', 'string3'],
	documents: ['string1', 'string2', 'string3'],
	contacts: [ProjectContactsExample, ProjectContactsExample],
	compliance: ProjectComplianceExample,
	team: TeamExample
};

export const GeometryExample: IGeometry = {
	type: 'string',
	coordinates: [12345, 12345]
};

export const PropertiesExample: IProperties = {
	UPRN: 'string',
	clientId: 'string',
	clientName: 'string',
	addressLine1: 'string',
	postcode: 'string'
};
export const GeoJsonExample: IGeoJson = {
	type: 'string',
	geometry: GeometryExample,
	properties: PropertiesExample,
	$key: 'string'
};

export const LocationsDocExample: ILocation = {
	_id: 'string',
	type: 'string',
	geometry: GeometryExample,
	properties: PropertiesExample,
	modifiedAt: new Date(Date.now()).toISOString(),
	modifiedBy: 'string'
};
